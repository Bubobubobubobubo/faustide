{"version":3,"file":"workbox-11808712.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof module:workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","setCacheNameDetails","forEach","assert","skipWaiting","addEventListener","clientsClaim","clients","claim","getFriendlyURL","urlObj","URL","String","location","href","replace","RegExp","origin","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","request","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","Request","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","Response","undefined","matchWrapper","matchOptions","cache","caches","open","cachedResponse","match","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","push","cacheMode","has","get","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","precachePlugins","add","newPlugins","installListener","waitUntil","catch","activateListener","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted"],"mappings":"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"}