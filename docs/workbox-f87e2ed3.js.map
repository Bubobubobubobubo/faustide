{"version":3,"file":"workbox-f87e2ed3.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof module:workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","setCacheNameDetails","forEach","assert","skipWaiting","addEventListener","clientsClaim","clients","claim","getFriendlyURL","urlObj","URL","String","location","href","replace","RegExp","origin","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","request","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","Request","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","Response","undefined","matchWrapper","matchOptions","cache","caches","open","cachedResponse","match","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","push","cacheMode","has","get","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","precachePlugins","add","newPlugins","installListener","waitUntil","catch","activateListener","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted"],"mappings":"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"}